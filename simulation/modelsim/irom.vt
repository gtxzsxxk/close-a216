// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench template that is freely editable to  
// suit user's needs .Comments are provided in each section to help the user    
// fill out necessary details.                                                  
// *****************************************************************************
// Generated on "11/21/2023 15:36:06"
                                                                                
// Verilog Test Bench template for design : irom
// 
// Simulation tool : ModelSim-Altera (Verilog)
// 

`timescale 1 ns/ 100 ps
module irom_vlg_tst();
// constants                                           
// general purpose registers
reg eachvec;
// test vector input registers
reg [16:0] HADDR;
reg HCLK;
reg HRESET;
reg [1:0] HTRANS;
reg [16:0] HWDATA;
reg HWRITE;
// wires                                               
wire [16:0]  HRDATA;

// assign statements (if any)                          
irom i1 (
// port map - connection between master ports and signals/registers   
	.HADDR(HADDR),
	.HCLK(HCLK),
	.HRDATA(HRDATA),
	.HRESET(HRESET),
	.HTRANS(HTRANS),
	.HWDATA(HWDATA),
	.HWRITE(HWRITE)
);
initial                                                
begin                                                  
// code that executes only once                        
// insert code here --> begin                          
HADDR = 0;
HRDATA = 0;
HRESET = 1;
HTRANS = 0;
HWDATA = 0;
HWRITE = 0;
#1 HRESET = 0;
#1 HRESET = 1;
#1 HCLK = 0;

HADDR = 3;
HWRITE = 1;
HWDATA = 21;
#1 HCLK = 1;
#1 HCLK = 0;

HADDR = 3;
HWRITE = 0;
HWDATA = 21;
#1 HCLK = 1;
#1 HCLK = 0;

// --> end                                             
$display("Running testbench");                       
end                                                    
always                                                 
// optional sensitivity list                           
// @(event1 or event2 or .... eventn)                  
begin                                                  
// code executes for every event on sensitivity list   
// insert code here --> begin                          

@eachvec;                                              
// --> end                                             
end                                                    
endmodule

